require("stdlib")

-- naive topological charge density

function naive_q(U)
  assert(#L == 4, "only 4-d lattice is supported")
  local function clovF(i,j)
    local Ujp = U[j]:shift(i - 1, "from_forward")
    local Uipx = U[i]:shift(j - 1, "from_forward"):adjoin()
    local Sl = U[j]:adjoin() * U[i] * Ujp
    local C01 = Sl * Uipx  -- at (0,1)
    local C11 = Uipx * Sl  -- at (1,1)
    local Su = Ujp * Uipx * U[j]:adjoin()
    local C00 = U[i] * Su -- at (0,0)
    local C10 = Su * U[i] -- at (1,0)
    local F = C00 +
              C01:shift(j - 1, "to_forward") +
              (C10 + C11:shift(j - 1, "to_forward")):shift(i - 1, "to_forward")
    return (F - F:adjoin()) / complex(0,8)
  end
  return 8 / qcd.Nc * (clovF(1,2) * clovF(3,4) +
                       clovF(1,3) * clovF(4,2) +
                       clovF(1,4) * clovF(2,3)):trace():real()
end
