require "stdlib"

Lx = 4
LAT = qcd.lattice{Lx,Lx + 1,Lx + 2}

VOLUME = 1
for i = 0, qcd.Nd - 1 do
   VOLUME = VOLUME * LAT[i]
end

printf("LAT: %d %s\n", #LAT, tostring(LAT))
printf("VOLUME: %d\n", VOLUME)

function show_x(n, d, x)
  printf("%s: %s\n", tostring(n), tostring(x))
  local v = 0
  for i = 0, #x - 1 do
    printf("  [%d] = %s\n", i, tostring(x[i]))
    v = v + x[i]
  end
  printf(" sum: %s\n", tostring(v))
end


printf("sample multi: %s\n", tostring(LAT:MultiSet(8, LAT:pcoord(0))))

for mu = 0, qcd.Nd - 1 do
  for x = 0, qcd.Nd - 1 do
     show_x("axis" .. mu .. " on " .. x, x,
              LAT:pcoord(mu):sum(LAT:MultiSet(LAT[x], LAT:pcoord(x))))
  end
end

S = LAT:RandomState(os.time(), LAT:pcoord(0) +
                               LAT[0] * LAT:pcoord(1) + 
                               LAT[0] * LAT[1] * LAT:pcoord(2))

function check_X(m, x)
   printf("checkX: %s %s\n", tostring(m), tostring(x))
   for d = 0, qcd.Nd - 1 do
     show_x("partial", d, x:sum(LAT:MultiSet(LAT[d], LAT:pcoord(d))))
   end
   printf("full: %s\n", tostring(x:sum()))
end

check_X("real", S:gaussian_Real())
check_X("complex", S:gaussian_Complex())
