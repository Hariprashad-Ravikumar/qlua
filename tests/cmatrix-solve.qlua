require "stdlib"

S = qcd.RandomState(33654, 7457)
size = 519
eps = 1e-16 * size * size

m = matrix.complex{size, size}
f = vector.complex(size)

for i = 0, size - 1 do
   f[i] = S:gaussian_Real()
   for j = 0, size - 1 do
	  m[{i,j}] = S:gaussian_Complex()
   end
end

z = m:solve(f)

ok = true
for i = 0, size - 1 do
   local s = f[i]
   for j = 0, size - 1 do
	  s = s - m[{i,j}] * z[j]
   end
   if s:abs() > eps then
	  ok = false
	  printf("%5d %20.8e %20.8e -- bad\n", i, s:real() / size / size, s:imag() / size / size)
   end
end

if ok then
   printf("DONE\n")
else
   printf("complex martix solve failed\n");
   os.exit(1)
end