require "stdlib"

L = qcd.lattice{4,4,4,8}


-- provide your own NERSC file for testing!
file_name = os.getenv("NERSC_DATA")
if not file_name then
  file_name = "./tests/random-gauge.nersc"
end

-- U, msg = L:nersc_gauge(file_name)
U, msg = qcd.nersc.read_gauge(L, file_name)

printf("NERSC read: U=%s, msg=%s\n", tostring(U), tostring(msg))

volume = 1
for i = 0, #L - 1 do
  volume = volume * L[i]
end

if not U then
  printf("Error reading NERSC gauge\n")
  os.exit(1)
end


printf("\n\n")
printf("HEADER of %s\n", file_name)
for i, v in pairs(msg) do
   printf("   %-20s   [%s]  %s\n",
          tostring(i), type(v), tostring(v))
end
printf("\n")

ltr = 0;
for i = 1, #L do
  ltr = ltr + U[i]:trace():sum():real()
end
ltr = ltr / (U[1]:colors() * #L * volume)
printf("link trace: %d %15.11f %15.7e\n" ,
       volume, ltr, (ltr - msg.LINK_TRACE) / ltr)

function plaquette(i, j, U)
   return U[i+1] *
          U[j+1]:shift(i, "from_forward") *
          U[i+1]:shift(j, "from_forward"):adjoin() *
          U[j+1]:adjoin()
end
pl = 0
for i = 0, #L - 1 do
  for j = i + 1, #L - 1 do
    pl = pl + plaquette(i, j, U):trace():sum():real()
  end
end
pl = pl * 2.0 / (U[1]:colors() * #L * (#L - 1) * volume)
printf("plaquette:  %d %15.11f %15.7e\n" ,
       volume, pl, (pl - msg.PLAQUETTE) / pl)

printf("DONE\n")

