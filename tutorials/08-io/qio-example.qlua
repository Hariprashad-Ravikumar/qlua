require "stdlib"
require "gauge"

-- open the reader and a writer
reader, rinfo = qcd.qdpc.Reader(L, "input-file")
out_xml = {["$tag"] = "test_output",
           {["$tag"] = "input",
            rinfo},
           {["$tag"] = "gauge_transform",
            "random"}}
writer = qcd.qdpc.Writer(L, "output-file", xml.unparse(out_xml))

-- first record: fermion field
F, f_info = reader:DiracFermion()

-- skip record #2
reader:skip()

-- record 3: gauge field
U, u_info = reader:ColorMatrix(#L)

-- close the reader
reader:close()
reader = nil

-- random gauge transform
g = toSUn(30*S:gaussian_ColorMatrix())

-- gauge transform the fermion
gF = g * F

-- and the gauge field
gU = {}
for i = 0, #L - 1 do
 gU[i+1] = g * U[i+1] * g:shift(i, "from_forward")
end

-- write transformed fermion and the gauge field
writer:ColorMatrix(gU, u_info)
writer:DiracFermion(gF, f_info)

-- close the writer
writer:close()
writer = nil
